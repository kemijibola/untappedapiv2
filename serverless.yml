service: untapped-scheduler

provider:
  name: aws
  runtime: nodejs10.x
  region: us-east-1
  profile: serverless-untapped-scheduler-agent
  stage: dev
  iamRoleStatements:
    - Effect: 'Allow'
    Action:
      - 'states.StartExecution'
    Resource:
      - Ref: SchedulingStateMachine
    - Effect: 'Allow'
    Action:
      - 'createSchedule'

package:
  individually: true

functions:
  ScheduleTask:
    handler: src/utils/TaskScheduler.schedule
    environment:
      STATEMACHINE_ARN: ${self:resources.Outputs.EmailSchedulingStateMachine.Value}
  CreateSchedule:
    handler: src/utils/approvals/Handler.approvalHandler

stepFunctions:
  stateMachines:
    SchedulingStateMachine:
      name: SchedulingStateMachine
      definition:
        Comment: 'Schedules approval request at specified date'
        StartAt: WaitForDueDate
        States:
          WaitForDueDate:
            Type: Wait
            TimestampPath: '$.dueDate'
            Next: CreateApproval
          CreateApproval:
            Type: Task
            End: true
resources:
  Outputs:
    SchedulingStateMachine:
      Description: The ARN of the Untapped Pool SchedulingStateMachine
      Value:
        Ref: SchedulingStateMachine

plugins:
  - serverless-step-functions
  - serverless-pseudo-parameters
  - serverless-webpack

        

service: untapped-email-scheduler-development

provider:
  name: aws
  runtime: nodejs10.x
  region: us-east-1
  profile: serverless-untapped-scheduler-agent
  stage: dev
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'states:StartExecution'
      Resource:
        - Ref: EmailSchedulingStateMachine
    - Effect: 'Allow'
      Action:
        - 'ses:SendEmail'
      Resource: arn:aws:ses:#{AWS::Region}:#{AWS::AccountId}:identity/${self:custom.EMAIL_SENDER_ADDRESS}

custom:
  EMAIL_SENDER_ADDRESS: 'talents@untappedpool.com'

package:
  individually: true

functions:
  ScheduleTask:
    handler: src/utils/TaskScheduler.schedule
    environment:
      STATEMACHINE_ARN: ${self:resources.Outputs.EmailSchedulingStateMachine.Value}
  SendEmail:
    handler: src/utils/emailservice/Handler.mailHandler
    environment:
      EMAIL_SENDER_ADDRESS: ${self:custom.EMAIL_SENDER_ADDRESS}
  

stepFunctions:
  stateMachines:
    EmailSchedulingStateMachine:
      name: EmailSchedulingStateMachine
      definition:
        Comment: 'Schedules an email to be sent at a specific date'
        StartAt: WaitForDueDate
        States:
          WaitForDueDate:
            Type: Wait
            TimestampPath: '$.dueDate'
            Next: SendEmail
          SendEmail:
            Type: Task
            Resource: 'arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-SendEmail'
            End: true

resources:
  Outputs:
    EmailSchedulingStateMachine:
      Description: The ARN of the Untapped Pool EmailSchedulingStateMachine
      Value:
        Ref: EmailSchedulingStateMachine

plugins:
  - serverless-step-functions
  - serverless-pseudo-parameters
  - serverless-webpack



service: talents-filter-by-categories

provider:
  name: aws
  runtime: nodejs10.x

functions:
  fetchTalentsByCategories:
    handler: src/utils/talentscategory/Handler.fetchTalentsByCategory
    events:
      # Runs every 30 mins
      - schedule:
        rate: rate(30 minute)
        enabled: true
